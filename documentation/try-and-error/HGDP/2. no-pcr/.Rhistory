if (class_or_superfamily=="superfamily"){subset <- filter(data, superfamily==which_TE)}
f_eurasia <- filter(subset, Eurasia-Africa>0, Eurasia-America>0, Eurasia-Oceania>0, sex=="female") %>% ungroup %>% summarise(eurasia = n()) %>% pull
f_africa <- filter(subset, Africa-Eurasia>0, Africa-America>0, Africa-Oceania>0, sex=="female") %>% ungroup %>% summarise(africa = n()) %>% pull
f_america <- filter(subset, America-Eurasia>0, America-Africa>0, America-Oceania>0, sex=="female") %>% ungroup %>% summarise(america = n()) %>% pull
f_oceania <- filter(subset, Oceania-Eurasia>0, Oceania-Africa>0, Oceania-America>0, sex=="female") %>% ungroup %>% summarise(oceania = n()) %>% pull
continents_names <- c("Eurasia", "Africa", "America", "Oceania")
f_morein <- c(f_eurasia, f_africa, f_america, f_oceania)
tot=f_eurasia+f_africa+f_america+f_oceania
f_morein_tibble <- tibble(continents_names, f_morein) %>% mutate(f_perc=round((f_morein/tot), 2))
f_bp <- ggplot(f_morein_tibble, aes("More abundant in", y=f_morein, fill=continents_names)) +
geom_bar(width = 1, stat = "identity") + labs(fill='')
f_pie <- f_bp + coord_polar("y", start=0) +
ggtitle("Females") + theme(plot.title = element_text(hjust = 0.5, size=8)) +
theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank()) +
theme(axis.text.y=element_blank()) + theme(axis.title.y=element_blank()) + theme(axis.ticks.y=element_blank()) +
geom_label(aes(label = f_morein), position = position_stack(vjust = 0.5), show.legend = FALSE)
m_eurasia <- filter(subset, Eurasia-Africa>0, Eurasia-America>0, Eurasia-Oceania>0, sex=="male") %>% ungroup %>% summarise(eurasia = n()) %>% pull
m_africa <- filter(subset, Africa-Eurasia>0, Africa-America>0, Africa-Oceania>0, sex=="male") %>% ungroup %>% summarise(africa = n()) %>% pull
m_america <- filter(subset, America-Eurasia>0, America-Africa>0, America-Oceania>0, sex=="male") %>% ungroup %>% summarise(america = n()) %>% pull
m_oceania <- filter(subset, Oceania-Eurasia>0, Oceania-Africa>0, Oceania-America>0, sex=="male") %>% ungroup %>% summarise(oceania = n()) %>% pull
m_morein <- c(m_eurasia, m_africa, m_america, m_oceania)
m_morein_tibble <- tibble(continents_names, m_morein) %>% mutate(m_perc=round((m_morein/tot), 2))
m_bp <- ggplot(m_morein_tibble, aes("More abundant in", y=m_morein, fill=continents_names)) +
geom_bar(width = 1, stat = "identity") + labs(fill='')
m_pie <- m_bp + coord_polar("y", start=0) +
ggtitle("Males") + theme(plot.title = element_text(hjust = 0.5, size=8)) +
theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank()) +
theme(axis.text.y=element_blank()) + theme(axis.title.y=element_blank()) + theme(axis.ticks.y=element_blank()) +
geom_label(aes(label = m_morein), position = position_stack(vjust = 0.5), show.legend = FALSE)
figure <- ggarrange(f_pie, m_pie, ncol = 2, nrow = 1, common.legend = TRUE, legend = "right", align = "hv", font.label = list(size = 10, color = "black", face = "bold", family = NULL, position = "top"))
text <- paste(which_TE, "- How many families are most abundant in each continent?")
(figure_final <- annotate_figure(figure, top = text_grob(text, color = "black", size = 15, hjust = 0.55, vjust = 2), fig.lab = ""))
}
pie_chart_less_in <- function(data, class_or_superfamily, which_TE){
if (class_or_superfamily=="class"){subset <- filter(data, class==which_TE)}
if (class_or_superfamily=="superfamily"){subset <- filter(data, superfamily==which_TE)}
less_f_eurasia <- filter(subset, Eurasia-Africa<0, Eurasia-America<0, Eurasia-Oceania<0, sex=="female") %>% ungroup %>% summarise(eurasia = n()) %>% pull
less_f_africa <- filter(subset, Africa-Eurasia<0, Africa-America<0, Africa-Oceania<0, sex=="female") %>% ungroup %>% summarise(africa = n()) %>% pull
less_f_america <- filter(subset, America-Eurasia<0, America-Africa<0, America-Oceania<0, sex=="female") %>% ungroup %>% summarise(america = n()) %>% pull
less_f_oceania <- filter(subset, Oceania-Eurasia<0, Oceania-Africa<0, Oceania-America<0, sex=="female") %>% ungroup %>% summarise(oceania = n()) %>% pull
f_lessin <- c(less_f_eurasia, less_f_africa, less_f_america, less_f_oceania)
continents_names <- c("Eurasia", "Africa", "America", "Oceania")
tot=less_f_eurasia+less_f_africa+less_f_america+less_f_oceania
f_lessin_tibble <- tibble(continents_names, f_lessin) %>% mutate(less_f_perc=round((f_lessin/tot), 2))
less_f_bp <- ggplot(f_lessin_tibble, aes("Less abundant in", y=f_lessin, fill=continents_names)) +
geom_bar(width = 1, stat = "identity") + labs(fill='')
less_f_pie <- less_f_bp + coord_polar("y", start=0) +
ggtitle("Females") + theme(plot.title = element_text(hjust = 0.5, size=8)) +
theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank()) +
theme(axis.text.y=element_blank()) + theme(axis.title.y=element_blank()) + theme(axis.ticks.y=element_blank()) +
geom_label(aes(label = f_lessin), position = position_stack(vjust = 0.5), show.legend = FALSE)
less_m_eurasia <- filter(subset, Eurasia-Africa<0, Eurasia-America<0, Eurasia-Oceania<0, sex=="male") %>% ungroup %>% summarise(eurasia = n()) %>% pull
less_m_africa <- filter(subset, Africa-Eurasia<0, Africa-America<0, Africa-Oceania<0, sex=="male") %>% ungroup %>% summarise(africa = n()) %>% pull
less_m_america <- filter(subset, America-Eurasia<0, America-Africa<0, America-Oceania<0, sex=="male") %>% ungroup %>% summarise(america = n()) %>% pull
less_m_oceania <- filter(subset, Oceania-Eurasia<0, Oceania-Africa<0, Oceania-America<0, sex=="male") %>% ungroup %>% summarise(oceania = n()) %>% pull
m_lessin <- c(less_m_eurasia, less_m_africa, less_m_america, less_m_oceania)
m_lessin_tibble <- tibble(continents_names, m_lessin) %>% mutate(less_m_perc=round((m_lessin/tot), 2))
less_m_bp <- ggplot(m_lessin_tibble, aes("Less abundant in", y=m_lessin, fill=continents_names)) +
geom_bar(width = 1, stat = "identity") + labs(fill='')
less_m_pie <- less_m_bp + coord_polar("y", start=0) +
ggtitle("Males") + theme(plot.title = element_text(hjust = 0.5, size=8)) +
theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank()) +
theme(axis.text.y=element_blank()) + theme(axis.title.y=element_blank()) + theme(axis.ticks.y=element_blank()) +
geom_label(aes(label = m_lessin), position = position_stack(vjust = 0.5), show.legend = FALSE)
figure <- ggarrange(less_f_pie, less_m_pie, ncol = 2, nrow = 1, common.legend = TRUE, legend = "right", align = "hv", font.label = list(size = 10, color = "black", face = "bold", family = NULL, position = "top"))
text <- paste(which_TE, "- How many families are least abundant in each continent?")
(figure_final <- annotate_figure(figure, top = text_grob(text, color = "black", size = 15, hjust = 0.55, vjust = 2), fig.lab = ""))
}
pie_chart_more_in(continents, "class", "LINE")
pie_chart_less_in(continents, "class", "LINE")
pie_chart_more_in(continents, "class", "SINE")
pie_chart_less_in(continents, "class", "SINE")
pie_chart_more_in(continents, "class", "DNA")
pie_chart_less_in(continents, "class", "DNA")
pie_chart_more_in(continents, "class", "LTR")
pie_chart_less_in(continents, "class", "LTR")
pie_chart_more_in(continents, "class", "satellite")
pie_chart_less_in(continents, "class", "satellite")
pie_chart_more_in(continents, "superfamily", "L1")
pie_chart_less_in(continents, "superfamily", "L1")
set.seed(42)
random1 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random2 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random3 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
pie_chart_more_in(random1, "class", "LINE")
pie_chart_more_in(random2, "class", "LINE")
pie_chart_more_in(random3, "class", "LINE")
pie_chart_less_in(random1, "class", "LINE")
pie_chart_less_in(random2, "class", "LINE")
pie_chart_less_in(random3, "class", "LINE")
pie_chart_more_in(random1, "class", "SINE")
pie_chart_more_in(random2, "class", "SINE")
pie_chart_more_in(random3, "class", "SINE")
pie_chart_less_in(random1, "class", "SINE")
pie_chart_less_in(random2, "class", "SINE")
pie_chart_less_in(random3, "class", "SINE")
pie_chart_more_in(random1, "class", "LTR")
pie_chart_more_in(random2, "class", "LTR")
pie_chart_more_in(random3, "class", "LTR")
pie_chart_less_in(random1, "class", "LTR")
pie_chart_less_in(random2, "class", "LTR")
pie_chart_less_in(random3, "class", "LTR")
pie_chart_more_in(random1, "class", "DNA")
pie_chart_more_in(random2, "class", "DNA")
pie_chart_more_in(random3, "class", "DNA")
pie_chart_less_in(random1, "class", "DNA")
pie_chart_less_in(random2, "class", "DNA")
pie_chart_less_in(random3, "class", "DNA")
pie_chart_more_in(random1, "class", "satellite")
pie_chart_more_in(random2, "class", "satellite")
pie_chart_more_in(random3, "class", "satellite")
pie_chart_less_in(random1, "class", "satellite")
pie_chart_less_in(random2, "class", "satellite")
pie_chart_less_in(random3, "class", "satellite")
set.seed(42)
random1 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random2 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random3 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
pie_chart_more_in(random1, "class", "LINE")
#pie_chart_more_in(random2, "class", "LINE")
#pie_chart_more_in(random3, "class", "LINE")
pie_chart_less_in(random1, "class", "LINE")
#pie_chart_less_in(random2, "class", "LINE")
#pie_chart_less_in(random3, "class", "LINE")
pie_chart_more_in(random1, "class", "SINE")
#pie_chart_more_in(random2, "class", "SINE")
#pie_chart_more_in(random3, "class", "SINE")
pie_chart_less_in(random1, "class", "SINE")
#pie_chart_less_in(random2, "class", "SINE")
#pie_chart_less_in(random3, "class", "SINE")
pie_chart_more_in(random1, "class", "LTR")
#pie_chart_more_in(random2, "class", "LTR")
#pie_chart_more_in(random3, "class", "LTR")
pie_chart_less_in(random1, "class", "LTR")
#pie_chart_less_in(random2, "class", "LTR")
#pie_chart_less_in(random3, "class", "LTR")
pie_chart_more_in(random1, "class", "DNA")
#pie_chart_more_in(random2, "class", "DNA")
#pie_chart_more_in(random3, "class", "DNA")
pie_chart_less_in(random1, "class", "DNA")
#pie_chart_less_in(random2, "class", "DNA")
#pie_chart_less_in(random3, "class", "DNA")
pie_chart_more_in(random1, "class", "satellite")
#pie_chart_more_in(random2, "class", "satellite")
#pie_chart_more_in(random3, "class", "satellite")
pie_chart_less_in(random1, "class", "satellite")
#pie_chart_less_in(random2, "class", "satellite")
#pie_chart_less_in(random3, "class", "satellite")
set.seed(42)
(random_continents <- by_pop %>% group_by(country, familyname, sex) %>% mutate(country = replace(country, country == 'Central_South_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'East_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'Middle_East', 'Eurasia')) %>% mutate(country = replace(country, country == 'Europe', 'Eurasia')))# %>% dplyr::summarise(country_mean=mean(copynumber)) %>% arrange(familyname) %>% pivot_wider(names_from = country, values_from = country_mean) %>% inner_join(classification, by="familyname") %>% distinct())
random1 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random2 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random3 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
pie_chart_more_in(random1, "class", "LINE")
#pie_chart_more_in(random2, "class", "LINE")
#pie_chart_more_in(random3, "class", "LINE")
pie_chart_less_in(random1, "class", "LINE")
#pie_chart_less_in(random2, "class", "LINE")
#pie_chart_less_in(random3, "class", "LINE")
pie_chart_more_in(random1, "class", "SINE")
#pie_chart_more_in(random2, "class", "SINE")
#pie_chart_more_in(random3, "class", "SINE")
pie_chart_less_in(random1, "class", "SINE")
#pie_chart_less_in(random2, "class", "SINE")
#pie_chart_less_in(random3, "class", "SINE")
pie_chart_more_in(random1, "class", "LTR")
#pie_chart_more_in(random2, "class", "LTR")
#pie_chart_more_in(random3, "class", "LTR")
pie_chart_less_in(random1, "class", "LTR")
#pie_chart_less_in(random2, "class", "LTR")
#pie_chart_less_in(random3, "class", "LTR")
pie_chart_more_in(random1, "class", "DNA")
#pie_chart_more_in(random2, "class", "DNA")
#pie_chart_more_in(random3, "class", "DNA")
pie_chart_less_in(random1, "class", "DNA")
#pie_chart_less_in(random2, "class", "DNA")
#pie_chart_less_in(random3, "class", "DNA")
pie_chart_more_in(random1, "class", "satellite")
#pie_chart_more_in(random2, "class", "satellite")
#pie_chart_more_in(random3, "class", "satellite")
pie_chart_less_in(random1, "class", "satellite")
#pie_chart_less_in(random2, "class", "satellite")
#pie_chart_less_in(random3, "class", "satellite")
set.seed(42)
random_by_pop <- group_by(HGDP, pop, country, familyname, sex) %>% select(!(copynumber)) %>% add_column(copynumber = runif(nrow(.))) %>% dplyr::summarise(sd=sd(copynumber), copynumber = mean(copynumber), count=n())
random_data <- inner_join(coord, random_by_pop, by = "pop")
(random_continents <- random_by_pop %>% group_by(country, familyname, sex) %>% mutate(country = replace(country, country == 'Central_South_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'East_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'Middle_East', 'Eurasia')) %>% mutate(country = replace(country, country == 'Europe', 'Eurasia')))# %>% dplyr::summarise(country_mean=mean(copynumber)) %>% arrange(familyname) %>% pivot_wider(names_from = country, values_from = country_mean) %>% inner_join(classification, by="familyname") %>% distinct())
random1 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random2 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random3 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
pie_chart_more_in(random1, "class", "LINE")
#pie_chart_more_in(random2, "class", "LINE")
#pie_chart_more_in(random3, "class", "LINE")
pie_chart_less_in(random1, "class", "LINE")
#pie_chart_less_in(random2, "class", "LINE")
#pie_chart_less_in(random3, "class", "LINE")
pie_chart_more_in(random1, "class", "SINE")
#pie_chart_more_in(random2, "class", "SINE")
#pie_chart_more_in(random3, "class", "SINE")
pie_chart_less_in(random1, "class", "SINE")
#pie_chart_less_in(random2, "class", "SINE")
#pie_chart_less_in(random3, "class", "SINE")
pie_chart_more_in(random1, "class", "LTR")
#pie_chart_more_in(random2, "class", "LTR")
#pie_chart_more_in(random3, "class", "LTR")
pie_chart_less_in(random1, "class", "LTR")
#pie_chart_less_in(random2, "class", "LTR")
#pie_chart_less_in(random3, "class", "LTR")
pie_chart_more_in(random1, "class", "DNA")
#pie_chart_more_in(random2, "class", "DNA")
#pie_chart_more_in(random3, "class", "DNA")
pie_chart_less_in(random1, "class", "DNA")
#pie_chart_less_in(random2, "class", "DNA")
#pie_chart_less_in(random3, "class", "DNA")
pie_chart_more_in(random1, "class", "satellite")
#pie_chart_more_in(random2, "class", "satellite")
#pie_chart_more_in(random3, "class", "satellite")
pie_chart_less_in(random1, "class", "satellite")
#pie_chart_less_in(random2, "class", "satellite")
#pie_chart_less_in(random3, "class", "satellite")
set.seed(42)
random_by_pop <- group_by(HGDP, pop, country, familyname, sex) %>% select(!(copynumber)) %>% add_column(copynumber = runif(nrow(.))) %>% dplyr::summarise(sd=sd(copynumber), copynumber = mean(copynumber), count=n())
random_data <- inner_join(coord, random_by_pop, by = "pop")
(random_continents <- random_by_pop %>% group_by(country, familyname, sex) %>% mutate(country = replace(country, country == 'Central_South_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'East_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'Middle_East', 'Eurasia')) %>% mutate(country = replace(country, country == 'Europe', 'Eurasia'))) %>% dplyr::summarise(country_mean=mean(copynumber)) %>% arrange(familyname) %>% pivot_wider(names_from = country, values_from = country_mean) %>% inner_join(classification, by="familyname") %>% distinct())
set.seed(42)
random_by_pop <- group_by(HGDP, pop, country, familyname, sex) %>% select(!(copynumber)) %>% add_column(copynumber = runif(nrow(.))) %>% dplyr::summarise(sd=sd(copynumber), copynumber = mean(copynumber), count=n())
random_data <- inner_join(coord, random_by_pop, by = "pop")
(random_continents <- random_by_pop %>% group_by(country, familyname, sex) %>% mutate(country = replace(country, country == 'Central_South_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'East_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'Middle_East', 'Eurasia')) %>% mutate(country = replace(country, country == 'Europe', 'Eurasia')) %>% dplyr::summarise(country_mean=mean(copynumber)) %>% arrange(familyname) %>% pivot_wider(names_from = country, values_from = country_mean) %>% inner_join(classification, by="familyname") %>% distinct())
random1 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random2 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
random3 <- continents %>% select(familyname, sex, superfamily, class) %>% add_column(Africa = runif(nrow(.)), America = runif(nrow(.)), Eurasia = runif(nrow(.)), Oceania = runif(nrow(.)))
pie_chart_more_in(random1, "class", "LINE")
#pie_chart_more_in(random2, "class", "LINE")
#pie_chart_more_in(random3, "class", "LINE")
pie_chart_less_in(random1, "class", "LINE")
#pie_chart_less_in(random2, "class", "LINE")
#pie_chart_less_in(random3, "class", "LINE")
pie_chart_more_in(random1, "class", "SINE")
#pie_chart_more_in(random2, "class", "SINE")
#pie_chart_more_in(random3, "class", "SINE")
pie_chart_less_in(random1, "class", "SINE")
#pie_chart_less_in(random2, "class", "SINE")
#pie_chart_less_in(random3, "class", "SINE")
pie_chart_more_in(random1, "class", "LTR")
#pie_chart_more_in(random2, "class", "LTR")
#pie_chart_more_in(random3, "class", "LTR")
pie_chart_less_in(random1, "class", "LTR")
#pie_chart_less_in(random2, "class", "LTR")
#pie_chart_less_in(random3, "class", "LTR")
pie_chart_more_in(random1, "class", "DNA")
#pie_chart_more_in(random2, "class", "DNA")
#pie_chart_more_in(random3, "class", "DNA")
pie_chart_less_in(random1, "class", "DNA")
#pie_chart_less_in(random2, "class", "DNA")
#pie_chart_less_in(random3, "class", "DNA")
pie_chart_more_in(random1, "class", "satellite")
#pie_chart_more_in(random2, "class", "satellite")
#pie_chart_more_in(random3, "class", "satellite")
pie_chart_less_in(random1, "class", "satellite")
#pie_chart_less_in(random2, "class", "satellite")
#pie_chart_less_in(random3, "class", "satellite")
random_by_pop <- group_by(HGDP, pop, country, familyname, sex) %>% select(!(copynumber)) %>% add_column(copynumber = runif(nrow(.))) %>% dplyr::summarise(sd=sd(copynumber), copynumber = mean(copynumber), count=n())
random_data <- inner_join(coord, random_by_pop, by = "pop")
(random_continents <- random_by_pop %>% group_by(country, familyname, sex) %>% mutate(country = replace(country, country == 'Central_South_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'East_Asia', 'Eurasia')) %>% mutate(country = replace(country, country == 'Middle_East', 'Eurasia')) %>% mutate(country = replace(country, country == 'Europe', 'Eurasia')) %>% dplyr::summarise(country_mean=mean(copynumber)) %>% arrange(familyname) %>% pivot_wider(names_from = country, values_from = country_mean) %>% inner_join(classification, by="familyname") %>% distinct())
pie_chart_more_in(random1, "class", "LINE")
pie_chart_less_in(random1, "class", "LINE")
pie_chart_less_in(random1, "class", "SINE")
pie_chart_less_in(random1, "class", "SINE")
pie_chart_more_in(random1, "class", "LTR")
pie_chart_less_in(random1, "class", "LTR")
pie_chart_more_in(random1, "class", "DNA")
pie_chart_less_in(random1, "class", "DNA")
pie_chart_more_in(random1, "class", "satellite")
pie_chart_less_in(random1, "class", "satellite")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/rpianezza/TE')
library(tidyverse)
library(dplyr)
library(ggpubr)
HGDPcutoff<-read_delim("/Users/rpianezza/TE/summary-HGDP/USEME_HGDP_complete_reflib6.2_mq10_batchinfo_cutoff0.01.txt",comment="#")
names(HGDPcutoff)<-c("ID","Pop","sex","Country","type","familyname","length","reads","copynumber","batch")
(data <- filter(HGDPcutoff, type=="te") %>% group_by(familyname, sex) %>% summarise(sd=sd(copynumber), mean=mean(copynumber)))
f<-filter(data, sex=="female") %>% rename(f_mean = mean, f_sd = sd)
m<-filter(data, sex=="male") %>% rename(m_mean = mean, m_sd = sd)
(final_data <- inner_join(f, m, by = "familyname") %>% select(familyname, f_mean, m_mean, f_sd, m_sd) %>% mutate(f_mean_log=log(f_mean), m_mean_log=log(m_mean), diff=m_mean-f_mean, abs_diff=abs(diff), ratio=case_when(diff>=0 ~ m_mean/f_mean, diff<0 ~ f_mean/m_mean), more_in=case_when(diff>=0 ~ "male", diff<0 ~ "female")) %>% arrange(desc(ratio)) %>% mutate(familyname=fct_reorder(familyname,ratio)))
(all <- ggplot(final_data, aes(x=f_mean, y=m_mean, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=1)+
geom_smooth(method="lm",color="grey", se=F)+
ylab("Male mean")+ xlab("Female mean")+geom_abline(slope=1,linetype='dashed')+theme_bw())
noALU <- final_data_noALU <- filter(final_data, !(familyname=="ALU"))#, !(familyname=="ALR1"), !(familyname=="HSATI"))
(ggplot(final_data_noALU, aes(x=f_mean, y=m_mean, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=1)+
geom_smooth(method="lm",color="grey", se=F)+ ylab("Male mean")+ xlab("Female mean")+geom_abline(slope=1,linetype='dashed')+theme_bw())
(log <- ggplot(final_data, aes(f_mean_log, m_mean_log, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=0.8)+
geom_smooth(method="lm",color="grey",se=F)+theme_bw()+ ylab("Male mean (log)")+ xlab("Female mean (log)"))
abs_subset <- filter(final_data, abs_diff>75) # This number is arbitrary, feel free to look at more/less TEs in the plot
(abs <- ggplot(abs_subset, aes(reorder(familyname, -abs(diff)), abs_diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("Repetitive sequence families") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
rel_all <- ggplot(final_data, aes(reorder(familyname, -ratio), ratio, fill=more_in)) + labs(fill = "More abundant in:")+geom_bar(stat="identity") + ylab("Ratio between sex abundances") + xlab("Repetitive sequence families") + theme(axis.text.x=element_blank())
rel_subset<- filter(final_data, ratio>1.25) # This number is arbitrary, feel free to look at more/less TEs in the plot
(rel <- ggplot(rel_subset, aes(reorder(familyname, -ratio), ratio, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Ratio between sex abundances") + xlab("Repetitive sequence families") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
L1<-final_data %>% filter(str_detect(familyname, "^L1"))
(L1plot <- ggplot(L1, aes(reorder(familyname, -abs(diff)), abs_diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
L1_50<-final_data %>% filter(str_detect(familyname, "^L1"), abs_diff>50)
(L1_50plot <- ggplot(L1_50, aes(reorder(familyname, -abs(diff)), abs_diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
(L1_male <- filter(L1, more_in == "male"))
nrow(L1_male)
nrow(L1)
L1_rel <- filter(L1, ratio>1.08)
ggplot(L1_rel, aes(reorder(familyname, -abs(ratio)), ratio, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("Repetitive sequence families")
abs_subset <- filter(final_data, abs_diff>75) # This number is arbitrary, feel free to look at more/less TEs in the plot
(abs <- ggplot(abs_subset, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("Repetitive sequence families") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
L1<-final_data %>% filter(str_detect(familyname, "^L1"))
(L1plot <- ggplot(L1, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
L1_50<-final_data %>% filter(str_detect(familyname, "^L1"), abs_diff>50)
(L1_50plot <- ggplot(L1_50, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
(L1_male <- filter(L1, more_in == "male"))
nrow(L1_male)
nrow(L1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/rpianezza/TE')
library(tidyverse)
library(dplyr)
library(ggpubr)
HGDPcutoff<-read_delim("/Users/rpianezza/TE/summary-HGDP/USEME_HGDP_complete_reflib6.2_mq10_batchinfo_cutoff0.01.txt",comment="#")
names(HGDPcutoff)<-c("ID","Pop","sex","Country","type","familyname","length","reads","copynumber","batch")
(data <- filter(HGDPcutoff, type=="te") %>% group_by(familyname, sex) %>% summarise(sd=sd(copynumber), mean=mean(copynumber)))
f<-filter(data, sex=="female") %>% rename(f_mean = mean, f_sd = sd)
m<-filter(data, sex=="male") %>% rename(m_mean = mean, m_sd = sd)
(final_data <- inner_join(f, m, by = "familyname") %>% select(familyname, f_mean, m_mean, f_sd, m_sd) %>% mutate(f_mean_log=log(f_mean), m_mean_log=log(m_mean), diff=f_mean-m_mean, abs_diff=abs(diff), ratio=case_when(diff>=0 ~ m_mean/f_mean, diff<0 ~ f_mean/m_mean), more_in=case_when(diff>=0 ~ "male", diff<0 ~ "female")) %>% arrange(desc(ratio)) %>% mutate(familyname=fct_reorder(familyname,ratio)))
(all <- ggplot(final_data, aes(x=f_mean, y=m_mean, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=1)+
geom_smooth(method="lm",color="grey", se=F)+
ylab("Male mean")+ xlab("Female mean")+geom_abline(slope=1,linetype='dashed')+theme_bw())
noALU <- final_data_noALU <- filter(final_data, !(familyname=="ALU"))#, !(familyname=="ALR1"), !(familyname=="HSATI"))
(ggplot(final_data_noALU, aes(x=f_mean, y=m_mean, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=1)+
geom_smooth(method="lm",color="grey", se=F)+ ylab("Male mean")+ xlab("Female mean")+geom_abline(slope=1,linetype='dashed')+theme_bw())
(log <- ggplot(final_data, aes(f_mean_log, m_mean_log, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=0.8)+
geom_smooth(method="lm",color="grey",se=F)+theme_bw()+ ylab("Male mean (log)")+ xlab("Female mean (log)"))
abs_subset <- filter(final_data, abs_diff>75) # This number is arbitrary, feel free to look at more/less TEs in the plot
(abs <- ggplot(abs_subset, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("Repetitive sequence families") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
rel_all <- ggplot(final_data, aes(reorder(familyname, -ratio), ratio, fill=more_in)) + labs(fill = "More abundant in:")+geom_bar(stat="identity") + ylab("Ratio between sex abundances") + xlab("Repetitive sequence families") + theme(axis.text.x=element_blank())
rel_subset<- filter(final_data, ratio>1.25) # This number is arbitrary, feel free to look at more/less TEs in the plot
(rel <- ggplot(rel_subset, aes(reorder(familyname, -ratio), ratio, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Ratio between sex abundances") + xlab("Repetitive sequence families") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
L1<-final_data %>% filter(str_detect(familyname, "^L1"))
(L1plot <- ggplot(L1, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
L1_50<-final_data %>% filter(str_detect(familyname, "^L1"), abs_diff>50)
(L1_50plot <- ggplot(L1_50, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
(L1_male <- filter(L1, more_in == "male"))
nrow(L1_male)
nrow(L1)
L1_rel <- filter(L1, ratio>1.08)
ggplot(L1_rel, aes(reorder(familyname, -abs(ratio)), ratio, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("Repetitive sequence families")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/rpianezza/TE')
library(tidyverse)
library(dplyr)
library(ggpubr)
HGDPcutoff<-read_delim("/Users/rpianezza/TE/summary-HGDP/USEME_HGDP_complete_reflib6.2_mq10_batchinfo_cutoff0.01.txt",comment="#")
names(HGDPcutoff)<-c("ID","Pop","sex","Country","type","familyname","length","reads","copynumber","batch")
(data <- filter(HGDPcutoff, type=="te") %>% group_by(familyname, sex) %>% summarise(sd=sd(copynumber), mean=mean(copynumber)))
f<-filter(data, sex=="female") %>% rename(f_mean = mean, f_sd = sd)
m<-filter(data, sex=="male") %>% rename(m_mean = mean, m_sd = sd)
(final_data <- inner_join(f, m, by = "familyname") %>% select(familyname, f_mean, m_mean, f_sd, m_sd) %>% mutate(f_mean_log=log(f_mean), m_mean_log=log(m_mean), diff=m_mean-f_mean, abs_diff=abs(diff), ratio=case_when(diff>=0 ~ m_mean/f_mean, diff<0 ~ f_mean/m_mean), more_in=case_when(diff>=0 ~ "male", diff<0 ~ "female")) %>% arrange(desc(ratio)) %>% mutate(familyname=fct_reorder(familyname,ratio)))
(all <- ggplot(final_data, aes(x=f_mean, y=m_mean, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=1)+
geom_smooth(method="lm",color="grey", se=F)+
ylab("Male mean")+ xlab("Female mean")+geom_abline(slope=1,linetype='dashed')+theme_bw())
noALU <- final_data_noALU <- filter(final_data, !(familyname=="ALU"))#, !(familyname=="ALR1"), !(familyname=="HSATI"))
(ggplot(final_data_noALU, aes(x=f_mean, y=m_mean, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=1)+
geom_smooth(method="lm",color="grey", se=F)+ ylab("Male mean")+ xlab("Female mean")+geom_abline(slope=1,linetype='dashed')+theme_bw())
(log <- ggplot(final_data, aes(f_mean_log, m_mean_log, color=more_in))+ labs(color = "More abundant in:") +
geom_point(size=0.8)+
geom_smooth(method="lm",color="grey",se=F)+theme_bw()+ ylab("Male mean (log)")+ xlab("Female mean (log)"))
abs_subset <- filter(final_data, abs_diff>75) # This number is arbitrary, feel free to look at more/less TEs in the plot
(abs <- ggplot(abs_subset, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("Repetitive sequence families") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
rel_all <- ggplot(final_data, aes(reorder(familyname, -ratio), ratio, fill=more_in)) + labs(fill = "More abundant in:")+geom_bar(stat="identity") + ylab("Ratio between sex abundances") + xlab("Repetitive sequence families") + theme(axis.text.x=element_blank())
rel_subset<- filter(final_data, ratio>1.25) # This number is arbitrary, feel free to look at more/less TEs in the plot
(rel <- ggplot(rel_subset, aes(reorder(familyname, -ratio), ratio, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Ratio between sex abundances") + xlab("Repetitive sequence families") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
L1<-final_data %>% filter(str_detect(familyname, "^L1"))
(L1plot <- ggplot(L1, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
L1_50<-final_data %>% filter(str_detect(familyname, "^L1"), abs_diff>50)
(L1_50plot <- ggplot(L1_50, aes(reorder(familyname, -abs(diff)), diff, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("LINE-1 subfamilies") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)))
(L1_male <- filter(L1, more_in == "male"))
nrow(L1_male)
nrow(L1)
L1_rel <- filter(L1, ratio>1.08)
ggplot(L1_rel, aes(reorder(familyname, -abs(ratio)), ratio, fill=more_in)) + labs(fill = "More abundant in:") +
geom_bar(stat="identity") + ylab("Difference between sex abundances") + xlab("Repetitive sequence families")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/rpianezza/TE')
ggplot(subset_TE, aes(reorder(familyname, -abs(diff)), abs_diff, fill=more_in, alpha=origin)) + labs(fill = "More abundant in:", alpha = "Data origin:") +
geom_bar(position="dodge", stat="identity") + ylab("Difference between male/female copynumbers")+ xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_alpha_discrete(range = c(0.5, 1))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/rpianezza/TE')
library(tidyverse)
library(ggpubr)
(RM <- read_delim("/Users/rpianezza/TE/T2T/RM_complete/GCF_009914755.1_T2T-CHM13v2.0_genomic_mod.fna.out", delim = " ",skip = 3, col_names = c("SWscore", "perc_div", "perc_del", "perc_ins", "query_sequence", "position_in_query_begin", "position_in_query_end", "position_in_query_left",  "strand", "matching_repeat", "repeat_class/family", "position_in_repeat_begin", "position_in_repeat_end", "position_in_repeat_left", "ID", "other_match")))
RM_cutoff <- filter(RM, perc_div < 15, position_in_query_end-position_in_query_begin>150) %>% replace_na(list(other_match = "-")) %>% filter(other_match == "-") %>% mutate(position_in_repeat_begin = str_replace(position_in_repeat_begin, "\\(", "")) %>% mutate(position_in_repeat_begin = str_replace(position_in_repeat_begin, "\\)", "")) %>% mutate(position_in_repeat_left = str_replace(position_in_repeat_left, "\\(", "")) %>% mutate(position_in_repeat_left = str_replace(position_in_repeat_left, "\\)", "")) %>% mutate(position_in_query_left = str_replace(position_in_query_left, "\\(", "")) %>% mutate(position_in_query_left = str_replace(position_in_query_left, "\\)", "")) %>% mutate(position_in_repeat_end = str_replace(position_in_repeat_end, "\\(", "")) %>% mutate(position_in_repeat_end = str_replace(position_in_repeat_end, "\\)", "")) %>% mutate(position_in_query_begin = str_replace(position_in_query_begin, "\\(", "")) %>% mutate(position_in_query_begin = str_replace(position_in_query_begin, "\\)", "")) %>% mutate(position_in_query_end = str_replace(position_in_query_end, "\\(", "")) %>% mutate(position_in_query_end = str_replace(position_in_query_end, "\\)", "")) %>% arrange(matching_repeat)
write_csv(RM_cutoff, "/Users/rpianezza/TE/T2T/RM_cutoff.csv")
RM_copynumbers <- read_csv("/Users/rpianezza/TE/T2T/RM_complete/copynumber_RM.csv", col_names = c("sequence", "copynumber"))
artificial <- read_delim("/Users/rpianezza/TE/T2T/T2T-artificial-reads/T2T_artificial_reads.mq10.mapstat", delim = "\t", skip = 8, col_names = c("type", "familyname", "length", "reads", "copynumber"))
art_subset <- select(artificial, familyname, copynumber) %>% arrange(familyname)
RM_subset <- RM_copynumbers %>% mutate(sequence = str_replace(sequence, "_te", "")) %>% mutate(sequence = str_replace(sequence, "_krab", "")) %>% mutate(sequence = str_replace(sequence, "_scg", "")) %>% mutate(sequence = str_replace(sequence, "_scgx", "")) %>% dplyr::rename(familyname = sequence)
RM_mod <- RM_cutoff %>% type_convert() %>% mutate(fragment_len = if_else(strand=="+", abs(position_in_repeat_begin-position_in_repeat_end), abs(position_in_repeat_left-position_in_repeat_end))) %>% mutate(sequence_len = if_else(strand=="+", fragment_len+position_in_repeat_begin+position_in_repeat_left, fragment_len+position_in_repeat_left+position_in_repeat_begin)) %>% arrange(matching_repeat, strand)
(RM_cutoff_te <- filter(RM_mod, str_detect(matching_repeat, ".te")))
write_csv(RM_cutoff_te, "/Users/rpianezza/TE/T2T/RM_cutoff_te.csv")
divergence <- group_by(RM_mod, matching_repeat) %>% dplyr::summarise(mean_div = mean(perc_div), mean_length = (sum(fragment_len))/(sequence_len*n())) %>% distinct() %>% mutate(matching_repeat = str_replace(matching_repeat, "_te", "")) %>% mutate(matching_repeat = str_replace(matching_repeat, "_krab", "")) %>% mutate(matching_repeat = str_replace(matching_repeat, "_scg", "")) %>% mutate(matching_repeat = str_replace(matching_repeat, "_scgx", "")) %>% dplyr::rename(familyname = matching_repeat)
cn_comparison <- inner_join(art_subset, RM_subset, by = "familyname") %>% dplyr::rename(pipeline_copynumber = copynumber.x) %>% dplyr::rename(RM_copynumber = copynumber.y)
cn_comparison_final <- inner_join(cn_comparison, divergence, by = "familyname")
ggplot(cn_comparison_final, aes(x=log(pipeline_copynumber), y=log(RM_copynumber), color=mean_length)) +
geom_point(size=1) + scale_color_gradient(low = "red", high = "green") + labs(color = "Mean length") +
geom_smooth(method="lm",color="grey", se=F) +
ylab("Normalized RM copynumber (log)") + xlab("Normalized pipeline copynumber (log)") +
stat_regline_equation(label.y = 13, aes(label = ..rr.label..), size=5)
RM_reads <- group_by(RM, matching_repeat) %>% count() %>% mutate(matching_repeat = str_replace(matching_repeat, "_te", "")) %>% mutate(matching_repeat = str_replace(matching_repeat, "_krab", "")) %>% mutate(matching_repeat = str_replace(matching_repeat, "_scg", "")) %>% mutate(matching_repeat = str_replace(matching_repeat, "_scgx", "")) %>% dplyr::rename(familyname = matching_repeat)
pipeline_reads <- select(artificial, familyname, copynumber) %>% arrange(familyname)
reads_comparison <- inner_join(pipeline_reads, RM_reads, by = "familyname") %>% dplyr::rename(pipeline_copynumber = copynumber, RM_reads = n) %>% inner_join(divergence, bz = "familyname")
ggplot(reads_comparison, aes(x=log(pipeline_copynumber), y=log(RM_reads), color=mean_length)) +
geom_point(size=1) + scale_color_gradient(low = "red", high = "green") + labs(color = "Mean length") +
geom_smooth(method="lm",color="grey", se=F) +
ylab("Non-normalized RM read number (log)") + xlab("Normalized pipeline copynumber (log)") +
stat_regline_equation(label.y = 14, aes(label = ..rr.label..), size=5)
HGDPcutoff<-read_delim("/Users/rpianezza/TE/summary-HGDP/USEME_HGDP_complete_reflib6.2_mq10_batchinfo_cutoff0.01.txt",comment="#")
names(HGDPcutoff)<-c("ID","pop","sex","country","type","familyname","length","reads","copynumber","batch")
mean_cn <- group_by(HGDPcutoff, familyname) %>% summarise(min = min(copynumber), mean = mean(copynumber), max = max(copynumber))
T2T_HGDP <- inner_join(mean_cn, art_subset, by="familyname") %>% dplyr::rename(T2T = copynumber) %>% inner_join(divergence, by = "familyname")
ggplot(T2T_HGDP, aes(x=log(mean), y=log(T2T), color=mean_length)) +
geom_point(size=1) + scale_color_gradient(low = "red", high = "green") + labs(color = " Mean length") +
geom_smooth(method="lm",color="grey")+
ylab("HGDP mean copynumber (log)") + xlab("Normalized pipeline copynumber (log)") +
stat_regline_equation(label.y = 13, aes(label = ..rr.label..), size=5)
art_female <- read_tsv("/Volumes/Temp1/rpianezza/TE/T2T/sexes/female.mq10.mapstat", skip=8, col_names = c("type", "familyname", "length", "reads", "copynumber"))
mean_female <- filter(HGDPcutoff, sex=="female") %>% group_by(familyname) %>% summarise(min = min(copynumber), mean = mean(copynumber), max = max(copynumber))
(art_female_HGDP <- inner_join(mean_female, art_female, by="familyname") %>% dplyr::rename(T2T_female = copynumber) %>% inner_join(divergence, by = "familyname"))
ggplot(art_female_HGDP, aes(x=log(mean), y=log(T2T_female), color=mean_length)) +
geom_point(size=1) + scale_color_gradient(low = "red", high = "green") + labs(color = " Mean length") +
geom_smooth(method="lm",color="grey")+
ylab("HGDP mean female copynumber (log)") + xlab("Normalized pipeline copynumber for artificial female (log)") +
stat_regline_equation(label.y = 13, aes(label = ..rr.label..), size=5)
art_male <- read_tsv("/Volumes/Temp1/rpianezza/TE/T2T/sexes/male.mq10.mapstat", skip=8, col_names = c("type", "familyname", "length", "reads", "copynumber"))
mean_male <- filter(HGDPcutoff, sex=="male") %>% group_by(familyname) %>% summarise(min = min(copynumber), mean = mean(copynumber), max = max(copynumber))
(art_male_HGDP <- inner_join(mean_male, art_male, by="familyname") %>% dplyr::rename(T2T_male = copynumber) %>% inner_join(divergence, by = "familyname"))
ggplot(art_male_HGDP, aes(x=log(mean), y=log(T2T_male), color=mean_length)) +
geom_point(size=1) + scale_color_gradient(low = "red", high = "green") + labs(color = " Mean length") +
geom_smooth(method="lm",color="grey")+
ylab("HGDP mean male copynumber (log)") + xlab("Normalized pipeline copynumber for artificial male (log)") +
stat_regline_equation(label.y = 13, aes(label = ..rr.label..), size=5)
data_mf <- filter(HGDPcutoff, type=="te") %>% group_by(familyname, sex) %>% dplyr::summarise(mean=mean(copynumber))
f<-filter(data_mf, sex=="female") %>% rename(f_mean = mean)
m<-filter(data_mf, sex=="male") %>% rename(m_mean = mean)
HGDP_mf <- inner_join(f, m, by = "familyname") %>% select(familyname, f_mean, m_mean) %>% mutate(f_mean_log=log(f_mean), m_mean_log=log(m_mean), diff=m_mean-f_mean, abs_diff=abs(diff), ratio=case_when(diff>=0 ~ m_mean/f_mean, diff<0 ~ f_mean/m_mean), more_in=case_when(diff>=0 ~ "male", diff<0 ~ "female")) %>% arrange(desc(ratio)) %>% mutate(familyname=fct_reorder(familyname,ratio), origin="HGDP")
art_f <- mutate(art_female, sex="female") %>% filter(type=="te", copynumber > 0.001) %>% select(familyname, copynumber) %>% dplyr::rename(f_mean=copynumber)
art_m <- mutate(art_male, sex="male") %>% filter(type=="te", copynumber > 0.001) %>% select(familyname, copynumber) %>% dplyr::rename(m_mean=copynumber)
art_mf <- full_join(art_f, art_m, by="familyname") %>% mutate(f_mean_log=log(f_mean), m_mean_log=log(m_mean), diff=m_mean-f_mean, abs_diff=abs(diff), ratio=case_when(diff>=0 ~ m_mean/f_mean, diff<0 ~ f_mean/m_mean), more_in=case_when(diff>=0 ~ "male", diff<0 ~ "female")) %>% arrange(desc(ratio)) %>% mutate(familyname=fct_reorder(familyname,ratio), origin="artificial")
final_data <- full_join(HGDP_mf, art_mf)
(subset_TE <- filter(final_data, familyname %in% c("ALR1", "HSATI", "ALR_", "ALR", "ALRb", "ALU", "L1PA4", "THE1B", "L1PA16", "L1")) %>% arrange(familyname))
ggplot(subset_TE, aes(reorder(familyname, -abs(diff)), abs_diff, fill=more_in, alpha=origin)) + labs(fill = "More abundant in:", alpha = "Data origin:") +
geom_bar(position="dodge", stat="identity") + ylab("Difference between male/female copynumbers")+ xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_alpha_discrete(range = c(0.5, 1))
ggplot(subset_TE, aes(reorder(familyname, -abs(diff)), diff, fill=more_in, alpha=origin)) + labs(fill = "More abundant in:", alpha = "Data origin:") +
geom_bar(position="dodge", stat="identity") + ylab("Difference between male/female copynumbers")+ xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_alpha_discrete(range = c(0.5, 1))
(subset_L1 <- filter(final_data, familyname %in% c("L1PB2c", "L1", "L1PREC1", "L1PA10", "L1PREC2", "L1PA7", "L1PB1", "L1MA1", "L1P_MA2", "L1PA15")) %>% arrange(familyname))
ggplot(subset_L1, aes(reorder(familyname, -abs(diff)), abs_diff, fill=more_in, alpha=origin)) + labs(fill = "More abundant in:", alpha = "Data origin:") +
geom_bar(position="dodge", stat="identity") + ylab("Difference between male/female copynumbers")+ xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_alpha_discrete(range = c(0.5, 1))
(subset_L1 <- filter(final_data, familyname %in% c("L1PB2c", "L1", "L1PREC1", "L1PA10", "L1PREC2", "L1PA7", "L1PB1", "L1MA1", "L1P_MA2", "L1PA15")) %>% arrange(familyname))
ggplot(subset_L1, aes(reorder(familyname, -abs(diff)), diff, fill=more_in, alpha=origin)) + labs(fill = "More abundant in:", alpha = "Data origin:") +
geom_bar(position="dodge", stat="identity") + ylab("Difference between male/female copynumbers")+ xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_alpha_discrete(range = c(0.5, 1))
